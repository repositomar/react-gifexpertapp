{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","catego","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,QAAU,IAC5BR,GAAc,SAAAS,GAAM,OAAKP,GAAL,mBAAoBO,OACxCN,EAAc,MAKlB,SACG,uBACKO,KAAO,OACPC,MAAST,EACTU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCNlBG,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAGpC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAOF,EAAKG,IAAOJ,IACxB,4BAAIA,Q,uBCLHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbN,EAFa,iDAEoCO,UAAUF,GAF9C,+DAGAG,MAAMR,GAHN,cAGbS,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAVvB,kBAcZY,GAdY,4CAAH,sDCCPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAEZrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAqBtC,OAdAC,qBAAW,WAEPjB,EAAQC,GACHiB,MAAK,SAAAC,GAEFH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAIvB,CAACb,IAGIc,EDlBwBK,CAAanB,GAAhCU,EAFuB,EAE5BJ,KAAaO,EAFe,EAEfA,QAGpB,OACI,qCACI,oBAAIjB,UAAU,wCAAd,SAAuDI,IAEtDa,GAAW,mBAAGjB,UAAU,mCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAEQc,EAAOF,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADGA,EAAIhB,aEdtB2B,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,gBAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAI9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAGA,6BAEQ2C,EAAWb,KAAI,SAAAR,GAAQ,OAClB,cAAC,EAAD,CAEGA,SAAYA,GADLA,Y,MCbnCsB,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.1057f6dd.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState(\"\");\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (inputValue.trim().length >= 2){\n            setCategories(catego => [inputValue, ...catego]);\n            setInputValue(\"\");\n        }\n    };\n\n    return (\n        <form onSubmit = {handleSubmit}>\n           <input\n                type = \"text\"\n                value = {inputValue}\n                onChange = {handleInputChange}\n           /> \n        </form>\n    );\n};\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src = {url} alt = {title} />\n            <p>{title}</p>\n        </div>\n    );\n};\n","\n\n\nexport const getGifs = async(category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=UKyPta649uFU7IHEWVoYCuWvZXFLJ5iD`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        };\n    });\n\n    return gifs;\n};","import React from 'react'\nimport {GifGridItem} from './GifGridItem'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrid = ({category}) => {\n\n    const {data:images, loading} = useFetchGifs(category);\n   \n    \n    return (\n        <>\n            <h3 className=\"animate__animated animate__rubberBand\">{category}</h3>\n\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\n\n            <div className=\"card-grid\">\n                {\n                    images.map( img => (\n                        <GifGridItem\n                        key = {img.id}\n                        {...img}\n                        />\n                    ))\n                }\n            </div>\n        </>\n    );\n};","import { useEffect, useState } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n    \n    useEffect( () => {\n\n        getGifs(category)\n            .then(imgs => {\n\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n                \n            });\n    },[category]);\n   \n        \n    return state;\n\n};\n\n","import React, {useState} from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState([\"Dragon Ball\"]);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories = {setCategories}/>\n            <hr />\n \n\n            <ol>\n                {\n                    categories.map(category => (\n                         <GifGrid\n                            key = {category}\n                            category = {category}\n                         />\n                    ))\n                }\n            </ol>\n        </>    \n    );\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  \n  <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}